module pa2;

import java.io.*;
import java.util.*;
import java.lang.Math; 

/* Node.salsa
 *
 * Handles the creation of new nodes
 *
*/

behavior Node{
    String val;
    Vector connections;
    int index;
    String key;
    int numNodes;

    Node(int nodeIndex) {
        val = "";
        connections = new Vector();
        index = nodeIndex;
    }

    String getVal() {
        return val;
    }

    Vector getConnections() {
        return connections;
    }

    void setVal(String newVal) {
        val = newVal;
    }

    void setConnections(int numNodes, int n) {
        this.numNodes = numNodes;
        for (int i = 0; i < n; i++) {
            connections.add((index + (int) Math.pow(2,i)) % numNodes);
        }
    }

    int insert(int target, String key, String value){
        int next_ind = nextIndex(target);
        //its us
        if (next_ind < 0){
            this.key = key;
            this.val = value;
            standardOutput<-println("Insert at " + target +" "+ key +" "+ value);
            return -1;
        }
        //otherwise let someone else do it
        else{
            standardOutput<-println("At node " + index+" going to "+ target);
            return (int)connections.get(next_ind);
        }
    }

    int nextIndex(int nodeid){
        if (nodeid == index){
            return -1;
        }
        else if (nodeid > index){
            return (int)(Math.log(nodeid-index)/Math.log(2));
        }
        else {
            return (int)(Math.log(nodeid-index+numNodes)/Math.log(2));
        }
    }
}